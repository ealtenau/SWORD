
Directions for running topology algorithm

(1) Finding intial geometric intersections
- First need to run init_geom.py for each basin:

python init_geom.py 61 

- where '61' is the basin number.
- Be sure to change directories/standard file names for 'rrr_riv_shp' and 'rrr_pts_shp' variables in the script



(2) Find and fix geometry problems, as well as geometric intersections
- Go to the SWORD_Prep_Topo_Clean.py and run line-by-line style
- First, you will find initial geometry problems
- Then, this will be an iterative process between the topology algorithm and this script when the algorithm breaks and geometry is fixed in QGIS



(3) Run topology algorithm
- Use the following code (with edited filenames/directories) to run the algorithm:

### Basin 24
python SWORD_Geom_fast_v2.py /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_FG1_Main.shp \
                             /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_FG1_Main_pts.shp \
                             /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_head_at_junc.csv \
                             /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_out_at_junc.csv \
                             /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_FG1.shp \
                             /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_FG1_Main_LSFix.shp \
                             /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b24/eu_sword_reaches_hb24_v17_rev_LS.csv \
                             > out_24.txt

- The inputs are (1) fixed geometry main network shapefile (INPUT)
                 (2) fixed geometry main network point geometric connections shapefile (INPUT)
                 (3) headwaters at junctions csv (INPUT)
                 (4) outlets at junctions csv (INPUT)
                 (5) fixed geometry full (main + side) network shapefile (INPUT)
                 (6) fixed geometry full (main + side) network point geometric connections shapefile (INPUT)
                 (7) fixed linestrings shapefile for the main network (OUTPUT)
                 (8) reversed linestrings for main network csv (OUTPUT)
                 (9) output text file for storing print statements and finding errors
- Note that the fixed linestrings shapefile for the full network and reversed linestrings csv for the full network are also
output from the script, variable names 7 and 8 are just modified within the code. 
- Also note that a lot of files can be written for each basin dependent on how many times the while loops need to be entered.
I would create a folder for each individual basin to help with some fot he messiness. 
- In the output text file, look for:

        'New junction configuration exists! Refine code. Reaches involved:
        22204001701
        22204000321'

        'A reach has been reversed multiple times -- check code!
        The counter is: 1
        ['82100900615', '82211000795', '82211000605', '82211000515', '82100900865', '82213000395', '82100900195', '82100900675']'

  The former usually indicates a geometry problem and the latter usually (not always) indicates an outlet distance problem. 
  Under each contains the reach IDs. Look at these reaches in QGIS and determine if geometry, outlet distance,
  or main_side needs to be fixed. If so, then go back to SWORD_Prep_Topo_Clean.py. Sometimes with the latter, not much
  more can be done and topology just needs to be manually defined. Let me know if this is the case and I can explain
  how I move forward with these cases.



(4) Define topology based on geometric intersections
- Use the following code (with edited filenames/directories):

### Basin 21
python SWORD_Topo_Geom_auto.py  /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_Main_LSFix_Side_sub_sub_sub_sub_pts_3.shp \
                                /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS.shp \
                                /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS_TopoFix.shp \
                                /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS_TopoFix_con.csv \
                                /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS_TopoFix_riv.csv 

- The inputs are (1) rrr_pts_shp: the final point intersections shapefile (INPUT)
                 (2) rrr_riv_shp: fixed geometry shapefile (extension '*_LSFix_MS.shp') (INPUT)
                 (3) rrr_top_shp: file contanting fixed topology (OUTPUT)
                 (4) rrr_con_csv: river connectivity csv (OUTPUT)
                 (5) rrr_riv_csv: topologically sorted river IDs csv (OUTPUT)
- Note that rrr_pts_shp is different for each basin based on how many iterations the topology algorithm has had to go through. 
  For basin 21, I see in the 'out_21.txt' file (from step 3), that the last generated points file ('geom_con_fname') is 
  'eu_sword_reaches_hb21_v17_FG1_Main_LSFix_Side_sub_sub_sub_sub_pts_3.shp' (sorry about all the 'subs', just haven't fixed the 
  code), based on this line in the text file:

  'geom_con_fname: /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_Main_LSFix_Side_sub_sub_sub_sub_pts_3.shp'

  if you don't see any version of this line printed in the output text file, then that means there were no issues in the side 
  network, and you can use this standard filename 'eu_sword_reaches_hb21_v17_FG1_Main_LSFix_Side_pts.shp' (with continent and
  basin modified).

- rrr_con_csv and rrr_riv_csv are inputs to the routing algorithm 



(5) Visualizing results - routing
- Use the following code (with edited filenames/directories):

### Basin 21
python CheckTopology_Route_MultiDown.py /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS_TopoFix_con.csv \
                                        /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS_TopoFix_riv.csv \
                                        /Users/elyssac/Documents/SWOT/SWORD_v17/EU/Topology/b21/eu_sword_reaches_hb21_v17_FG1_LSFix_MS_TopoFix_acc.csv

- The inputs are (1) rrr_con_csv: river connectivity csv (INPUT)
                 (2) rrr_riv_csv: topologically sorted river IDs csv (INPUT)
                 (3) rrr_acc_csv: number of accumulated reaches per reach csv (OUTPUT)

- After running the routing code, you can attach rrr_acc_csv to the river shapefile and visualize the variable
  'acc' to see if things are flowing correctly/you find anything weird